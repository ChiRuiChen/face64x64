// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config9_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_pp0_stage0 = 32'd16;
parameter    ap_ST_fsm_state7 = 32'd32;
parameter    ap_ST_fsm_state8 = 32'd64;
parameter    ap_ST_fsm_state9 = 32'd128;
parameter    ap_ST_fsm_state10 = 32'd256;
parameter    ap_ST_fsm_state11 = 32'd512;
parameter    ap_ST_fsm_state12 = 32'd1024;
parameter    ap_ST_fsm_state13 = 32'd2048;
parameter    ap_ST_fsm_state14 = 32'd4096;
parameter    ap_ST_fsm_state15 = 32'd8192;
parameter    ap_ST_fsm_state16 = 32'd16384;
parameter    ap_ST_fsm_state17 = 32'd32768;
parameter    ap_ST_fsm_state18 = 32'd65536;
parameter    ap_ST_fsm_state19 = 32'd131072;
parameter    ap_ST_fsm_state20 = 32'd262144;
parameter    ap_ST_fsm_state21 = 32'd524288;
parameter    ap_ST_fsm_state22 = 32'd1048576;
parameter    ap_ST_fsm_state23 = 32'd2097152;
parameter    ap_ST_fsm_state24 = 32'd4194304;
parameter    ap_ST_fsm_state25 = 32'd8388608;
parameter    ap_ST_fsm_state26 = 32'd16777216;
parameter    ap_ST_fsm_state27 = 32'd33554432;
parameter    ap_ST_fsm_state28 = 32'd67108864;
parameter    ap_ST_fsm_state29 = 32'd134217728;
parameter    ap_ST_fsm_state30 = 32'd268435456;
parameter    ap_ST_fsm_state31 = 32'd536870912;
parameter    ap_ST_fsm_state32 = 32'd1073741824;
parameter    ap_ST_fsm_state33 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [8:0] layer_in_V_5_address0;
reg    layer_in_V_5_ce0;
reg    layer_in_V_5_we0;
wire  signed [15:0] layer_in_V_5_q0;
reg   [31:0] sX;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
wire   [8:0] w9_V_address0;
reg    w9_V_ce0;
wire   [381:0] w9_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1523_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state32;
reg   [23:0] acc_V_47_0_reg_893;
reg   [23:0] acc_V_46_0_reg_905;
reg   [23:0] acc_V_45_0_reg_917;
reg   [23:0] acc_V_44_0_reg_929;
reg   [23:0] acc_V_43_0_reg_941;
reg   [23:0] acc_V_42_0_reg_953;
reg   [23:0] acc_V_41_0_reg_965;
reg   [23:0] acc_V_40_0_reg_977;
reg   [23:0] acc_V_39_0_reg_989;
reg   [23:0] acc_V_38_0_reg_1001;
reg   [23:0] acc_V_37_0_reg_1013;
reg   [23:0] acc_V_36_0_reg_1025;
reg   [23:0] acc_V_35_0_reg_1037;
reg   [23:0] acc_V_34_0_reg_1049;
reg   [23:0] acc_V_33_0_reg_1061;
reg   [23:0] acc_V_32_0_reg_1073;
reg   [23:0] acc_V_31_0_reg_1085;
reg   [23:0] acc_V_30_0_reg_1097;
reg   [23:0] acc_V_29_0_reg_1109;
reg   [23:0] acc_V_28_0_reg_1121;
reg   [23:0] acc_V_27_0_reg_1133;
reg   [23:0] acc_V_26_0_reg_1145;
reg   [23:0] acc_V_25_0_reg_1157;
reg   [23:0] acc_V_24_0_reg_1169;
reg   [23:0] acc_V_23_0_reg_1181;
reg   [23:0] acc_V_22_0_reg_1193;
reg   [23:0] acc_V_21_0_reg_1205;
reg   [23:0] acc_V_20_0_reg_1217;
reg   [23:0] acc_V_19_0_reg_1229;
reg   [23:0] acc_V_18_0_reg_1241;
reg   [23:0] acc_V_17_0_reg_1253;
reg   [23:0] acc_V_16_0_reg_1265;
reg   [23:0] acc_V_15_0_reg_1277;
reg   [23:0] acc_V_14_0_reg_1289;
reg   [23:0] acc_V_13_0_reg_1301;
reg   [23:0] acc_V_12_0_reg_1313;
reg   [23:0] acc_V_11_0_reg_1325;
reg   [23:0] acc_V_10_0_reg_1337;
reg   [23:0] acc_V_9_0_reg_1349;
reg   [23:0] acc_V_8_0_reg_1361;
reg   [23:0] acc_V_7_0_reg_1373;
reg   [23:0] acc_V_6_0_reg_1385;
reg   [23:0] acc_V_5_0_reg_1397;
reg   [23:0] acc_V_4_0_reg_1409;
reg   [23:0] acc_V_3_0_reg_1421;
reg   [23:0] acc_V_2_0_reg_1433;
reg   [23:0] acc_V_1_0_reg_1445;
reg   [23:0] acc_V_0_0_reg_1457;
reg   [8:0] in_index_reg_1469;
reg    ap_block_state1;
wire   [10:0] i_fu_1517_p2;
reg   [10:0] i_reg_3522;
wire    ap_CS_fsm_state2;
wire   [5:0] i1_fu_1529_p2;
reg    ap_block_state3;
reg   [31:0] sX_load_reg_3535;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done;
wire   [0:0] icmp_ln326_fu_1544_p2;
reg   [0:0] icmp_ln326_reg_3540;
reg   [31:0] sY_load_reg_3545;
wire   [0:0] icmp_ln326_1_fu_1554_p2;
reg   [0:0] icmp_ln326_1_reg_3550;
reg   [31:0] pY_load_reg_3555;
reg   [31:0] pX_load_reg_3561;
wire   [0:0] and_ln326_2_fu_1612_p2;
reg   [0:0] and_ln326_2_reg_3567;
wire   [0:0] icmp_ln324_fu_1618_p2;
reg   [0:0] icmp_ln324_reg_3571;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] ir_fu_1624_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_2895_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [23:0] grp_fu_2903_p3;
wire  signed [23:0] grp_fu_2911_p3;
wire  signed [23:0] grp_fu_2919_p3;
wire  signed [23:0] grp_fu_2927_p3;
wire  signed [23:0] grp_fu_2935_p3;
wire  signed [23:0] grp_fu_2943_p3;
wire  signed [23:0] grp_fu_2951_p3;
wire  signed [23:0] grp_fu_2959_p3;
wire  signed [23:0] grp_fu_2967_p3;
wire  signed [23:0] grp_fu_2975_p3;
wire  signed [23:0] grp_fu_2983_p3;
wire  signed [23:0] grp_fu_2991_p3;
wire  signed [23:0] grp_fu_2999_p3;
wire  signed [23:0] grp_fu_3007_p3;
wire  signed [23:0] grp_fu_3015_p3;
wire  signed [23:0] grp_fu_3023_p3;
wire  signed [23:0] grp_fu_3031_p3;
wire  signed [23:0] grp_fu_3039_p3;
wire  signed [23:0] grp_fu_3047_p3;
wire  signed [23:0] grp_fu_3055_p3;
wire  signed [23:0] grp_fu_3063_p3;
wire  signed [23:0] grp_fu_3071_p3;
wire  signed [23:0] grp_fu_3079_p3;
wire  signed [23:0] grp_fu_3087_p3;
wire  signed [23:0] grp_fu_3095_p3;
wire  signed [23:0] grp_fu_3103_p3;
wire  signed [23:0] grp_fu_3111_p3;
wire  signed [23:0] grp_fu_3119_p3;
wire  signed [23:0] grp_fu_3127_p3;
wire  signed [23:0] grp_fu_3135_p3;
wire  signed [23:0] grp_fu_3143_p3;
wire  signed [23:0] grp_fu_3151_p3;
wire  signed [23:0] grp_fu_3159_p3;
wire  signed [23:0] grp_fu_3167_p3;
wire  signed [23:0] grp_fu_3175_p3;
wire  signed [23:0] grp_fu_3183_p3;
wire  signed [23:0] grp_fu_3191_p3;
wire  signed [23:0] grp_fu_3199_p3;
wire  signed [23:0] grp_fu_3207_p3;
wire  signed [23:0] grp_fu_3215_p3;
wire  signed [23:0] grp_fu_3223_p3;
wire  signed [23:0] grp_fu_3231_p3;
wire  signed [23:0] grp_fu_3239_p3;
wire  signed [23:0] grp_fu_3247_p3;
wire  signed [23:0] grp_fu_3255_p3;
wire  signed [23:0] grp_fu_3263_p3;
wire  signed [23:0] grp_fu_3271_p3;
reg   [15:0] trunc_ln708_2_reg_3830;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_3_reg_3835;
reg   [15:0] trunc_ln708_4_reg_3840;
reg   [15:0] trunc_ln708_5_reg_3845;
reg   [15:0] trunc_ln708_6_reg_3850;
reg   [15:0] trunc_ln708_7_reg_3855;
reg   [15:0] trunc_ln708_8_reg_3860;
reg   [15:0] trunc_ln708_9_reg_3865;
reg   [15:0] trunc_ln708_s_reg_3870;
reg   [15:0] trunc_ln708_10_reg_3875;
reg   [15:0] trunc_ln708_11_reg_3880;
reg   [15:0] trunc_ln708_12_reg_3885;
reg   [15:0] trunc_ln708_13_reg_3890;
reg   [15:0] trunc_ln708_14_reg_3895;
reg   [15:0] trunc_ln708_15_reg_3900;
reg   [15:0] trunc_ln708_16_reg_3905;
reg   [15:0] trunc_ln708_17_reg_3910;
reg   [15:0] trunc_ln708_18_reg_3915;
reg   [15:0] trunc_ln708_19_reg_3920;
reg   [15:0] trunc_ln708_20_reg_3925;
reg   [15:0] trunc_ln708_21_reg_3930;
reg   [15:0] trunc_ln708_22_reg_3935;
reg   [15:0] trunc_ln708_23_reg_3940;
reg   [15:0] trunc_ln708_24_reg_3945;
reg   [15:0] trunc_ln708_25_reg_3950;
reg   [15:0] trunc_ln708_26_reg_3955;
reg   [15:0] trunc_ln708_27_reg_3960;
reg   [15:0] trunc_ln708_28_reg_3965;
reg   [15:0] trunc_ln708_29_reg_3970;
reg   [15:0] trunc_ln708_30_reg_3975;
reg   [15:0] trunc_ln708_31_reg_3980;
reg   [15:0] trunc_ln708_32_reg_3985;
reg   [15:0] trunc_ln708_33_reg_3990;
reg   [15:0] trunc_ln708_34_reg_3995;
reg   [15:0] trunc_ln708_35_reg_4000;
reg   [15:0] trunc_ln708_36_reg_4005;
reg   [15:0] trunc_ln708_37_reg_4010;
reg   [15:0] trunc_ln708_38_reg_4015;
reg   [15:0] trunc_ln708_39_reg_4020;
reg   [15:0] trunc_ln708_40_reg_4025;
reg   [15:0] trunc_ln708_41_reg_4030;
reg   [15:0] trunc_ln708_42_reg_4035;
reg   [15:0] trunc_ln708_43_reg_4040;
reg   [15:0] trunc_ln708_44_reg_4045;
reg   [15:0] trunc_ln708_45_reg_4050;
reg   [15:0] trunc_ln708_46_reg_4055;
wire   [5:0] i_ic_fu_2798_p2;
reg   [5:0] i_ic_reg_4063;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln338_fu_2792_p2;
wire   [0:0] icmp_ln346_fu_2809_p2;
reg   [0:0] icmp_ln346_reg_4073;
wire   [31:0] select_ln356_fu_2876_p3;
wire   [0:0] icmp_ln350_fu_2855_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [4:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [5:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [5:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_idle;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_ce0;
wire   [8:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_d0;
reg   [10:0] i_0_i_reg_871;
wire    ap_CS_fsm_state33;
reg   [5:0] i1_0_i_reg_882;
wire   [0:0] icmp_ln313_fu_1511_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1480;
wire    ap_CS_fsm_state30;
reg   [31:0] storemerge_i_reg_1491;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1535_p1;
wire   [63:0] zext_ln332_fu_1630_p1;
wire   [63:0] zext_ln340_fu_2804_p1;
wire   [31:0] select_ln361_fu_2830_p3;
wire   [31:0] add_ln354_fu_2860_p2;
wire   [31:0] add_ln359_fu_2814_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [30:0] tmp_3_fu_1564_p4;
wire   [30:0] tmp_4_fu_1584_p4;
wire   [0:0] icmp_ln326_2_fu_1574_p2;
wire   [0:0] icmp_ln326_3_fu_1594_p2;
wire   [0:0] and_ln326_1_fu_1606_p2;
wire   [0:0] and_ln326_fu_1600_p2;
wire  signed [15:0] sext_ln1116_fu_1640_p0;
wire  signed [7:0] trunc_ln332_fu_1636_p1;
wire  signed [7:0] tmp_47_fu_1652_p4;
wire  signed [7:0] tmp_48_fu_1666_p4;
wire  signed [7:0] tmp_49_fu_1680_p4;
wire  signed [7:0] tmp_50_fu_1694_p4;
wire  signed [7:0] tmp_51_fu_1708_p4;
wire  signed [7:0] tmp_52_fu_1722_p4;
wire  signed [7:0] tmp_53_fu_1736_p4;
wire  signed [7:0] tmp_54_fu_1750_p4;
wire  signed [7:0] tmp_55_fu_1764_p4;
wire  signed [7:0] tmp_56_fu_1778_p4;
wire  signed [7:0] tmp_57_fu_1792_p4;
wire  signed [7:0] tmp_58_fu_1806_p4;
wire  signed [7:0] tmp_59_fu_1820_p4;
wire  signed [7:0] tmp_60_fu_1834_p4;
wire  signed [7:0] tmp_61_fu_1848_p4;
wire  signed [7:0] tmp_62_fu_1862_p4;
wire  signed [7:0] tmp_63_fu_1876_p4;
wire  signed [7:0] tmp_64_fu_1890_p4;
wire  signed [7:0] tmp_65_fu_1904_p4;
wire  signed [7:0] tmp_66_fu_1918_p4;
wire  signed [7:0] tmp_67_fu_1932_p4;
wire  signed [7:0] tmp_68_fu_1946_p4;
wire  signed [7:0] tmp_69_fu_1960_p4;
wire  signed [7:0] tmp_70_fu_1974_p4;
wire  signed [7:0] tmp_71_fu_1988_p4;
wire  signed [7:0] tmp_72_fu_2002_p4;
wire  signed [7:0] tmp_73_fu_2016_p4;
wire  signed [7:0] tmp_74_fu_2030_p4;
wire  signed [7:0] tmp_75_fu_2044_p4;
wire  signed [7:0] tmp_76_fu_2058_p4;
wire  signed [7:0] tmp_77_fu_2072_p4;
wire  signed [7:0] tmp_78_fu_2086_p4;
wire  signed [7:0] tmp_79_fu_2100_p4;
wire  signed [7:0] tmp_80_fu_2114_p4;
wire  signed [7:0] tmp_81_fu_2128_p4;
wire  signed [7:0] tmp_82_fu_2142_p4;
wire  signed [7:0] tmp_83_fu_2156_p4;
wire  signed [7:0] tmp_84_fu_2170_p4;
wire  signed [7:0] tmp_85_fu_2184_p4;
wire  signed [7:0] tmp_86_fu_2198_p4;
wire  signed [7:0] tmp_87_fu_2212_p4;
wire  signed [7:0] tmp_88_fu_2226_p4;
wire  signed [7:0] tmp_89_fu_2240_p4;
wire  signed [7:0] tmp_90_fu_2254_p4;
wire  signed [7:0] tmp_91_fu_2268_p4;
wire  signed [7:0] tmp_92_fu_2282_p4;
wire  signed [5:0] tmp_2_fu_2296_p4;
wire   [31:0] add_ln361_fu_2825_p2;
wire   [31:0] add_ln356_fu_2871_p2;
wire  signed [15:0] grp_fu_2895_p1;
wire  signed [23:0] sext_ln1116_fu_1640_p1;
wire  signed [15:0] grp_fu_2903_p1;
wire  signed [15:0] grp_fu_2911_p1;
wire  signed [15:0] grp_fu_2919_p1;
wire  signed [15:0] grp_fu_2927_p1;
wire  signed [15:0] grp_fu_2935_p1;
wire  signed [15:0] grp_fu_2943_p1;
wire  signed [15:0] grp_fu_2951_p1;
wire  signed [15:0] grp_fu_2959_p1;
wire  signed [15:0] grp_fu_2967_p1;
wire  signed [15:0] grp_fu_2975_p1;
wire  signed [15:0] grp_fu_2983_p1;
wire  signed [15:0] grp_fu_2991_p1;
wire  signed [15:0] grp_fu_2999_p1;
wire  signed [15:0] grp_fu_3007_p1;
wire  signed [15:0] grp_fu_3015_p1;
wire  signed [15:0] grp_fu_3023_p1;
wire  signed [15:0] grp_fu_3031_p1;
wire  signed [15:0] grp_fu_3039_p1;
wire  signed [15:0] grp_fu_3047_p1;
wire  signed [15:0] grp_fu_3055_p1;
wire  signed [15:0] grp_fu_3063_p1;
wire  signed [15:0] grp_fu_3071_p1;
wire  signed [15:0] grp_fu_3079_p1;
wire  signed [15:0] grp_fu_3087_p1;
wire  signed [15:0] grp_fu_3095_p1;
wire  signed [15:0] grp_fu_3103_p1;
wire  signed [15:0] grp_fu_3111_p1;
wire  signed [15:0] grp_fu_3119_p1;
wire  signed [15:0] grp_fu_3127_p1;
wire  signed [15:0] grp_fu_3135_p1;
wire  signed [15:0] grp_fu_3143_p1;
wire  signed [15:0] grp_fu_3151_p1;
wire  signed [15:0] grp_fu_3159_p1;
wire  signed [15:0] grp_fu_3167_p1;
wire  signed [15:0] grp_fu_3175_p1;
wire  signed [15:0] grp_fu_3183_p1;
wire  signed [15:0] grp_fu_3191_p1;
wire  signed [15:0] grp_fu_3199_p1;
wire  signed [15:0] grp_fu_3207_p1;
wire  signed [15:0] grp_fu_3215_p1;
wire  signed [15:0] grp_fu_3223_p1;
wire  signed [15:0] grp_fu_3231_p1;
wire  signed [15:0] grp_fu_3239_p1;
wire  signed [15:0] grp_fu_3247_p1;
wire  signed [15:0] grp_fu_3255_p1;
wire  signed [15:0] grp_fu_3263_p1;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_821;
reg    ap_condition_823;
reg    ap_condition_606;
reg    ap_condition_743;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 32'd1;
#0 sX = 32'd0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_layeibs #(
    .DataWidth( 16 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
layer_in_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_5_address0),
    .ce0(layer_in_V_5_ce0),
    .we0(layer_in_V_5_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_d0),
    .q0(layer_in_V_5_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_w9_V #(
    .DataWidth( 382 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
w9_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w9_V_address0),
    .ce0(w9_V_ce0),
    .q0(w9_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpdjbC #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_layesc4 #(
    .DataWidth( 16 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_d0),
    .output_V_q0(layer_in_V_5_q0)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U104(
    .din0(trunc_ln332_fu_1636_p1),
    .din1(grp_fu_2895_p1),
    .din2(acc_V_0_0_reg_1457),
    .dout(grp_fu_2895_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U105(
    .din0(tmp_47_fu_1652_p4),
    .din1(grp_fu_2903_p1),
    .din2(acc_V_1_0_reg_1445),
    .dout(grp_fu_2903_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U106(
    .din0(tmp_48_fu_1666_p4),
    .din1(grp_fu_2911_p1),
    .din2(acc_V_2_0_reg_1433),
    .dout(grp_fu_2911_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U107(
    .din0(tmp_49_fu_1680_p4),
    .din1(grp_fu_2919_p1),
    .din2(acc_V_3_0_reg_1421),
    .dout(grp_fu_2919_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U108(
    .din0(tmp_50_fu_1694_p4),
    .din1(grp_fu_2927_p1),
    .din2(acc_V_4_0_reg_1409),
    .dout(grp_fu_2927_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U109(
    .din0(tmp_51_fu_1708_p4),
    .din1(grp_fu_2935_p1),
    .din2(acc_V_5_0_reg_1397),
    .dout(grp_fu_2935_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U110(
    .din0(tmp_52_fu_1722_p4),
    .din1(grp_fu_2943_p1),
    .din2(acc_V_6_0_reg_1385),
    .dout(grp_fu_2943_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U111(
    .din0(tmp_53_fu_1736_p4),
    .din1(grp_fu_2951_p1),
    .din2(acc_V_7_0_reg_1373),
    .dout(grp_fu_2951_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U112(
    .din0(tmp_54_fu_1750_p4),
    .din1(grp_fu_2959_p1),
    .din2(acc_V_8_0_reg_1361),
    .dout(grp_fu_2959_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U113(
    .din0(tmp_55_fu_1764_p4),
    .din1(grp_fu_2967_p1),
    .din2(acc_V_9_0_reg_1349),
    .dout(grp_fu_2967_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U114(
    .din0(tmp_56_fu_1778_p4),
    .din1(grp_fu_2975_p1),
    .din2(acc_V_10_0_reg_1337),
    .dout(grp_fu_2975_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U115(
    .din0(tmp_57_fu_1792_p4),
    .din1(grp_fu_2983_p1),
    .din2(acc_V_11_0_reg_1325),
    .dout(grp_fu_2983_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U116(
    .din0(tmp_58_fu_1806_p4),
    .din1(grp_fu_2991_p1),
    .din2(acc_V_12_0_reg_1313),
    .dout(grp_fu_2991_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U117(
    .din0(tmp_59_fu_1820_p4),
    .din1(grp_fu_2999_p1),
    .din2(acc_V_13_0_reg_1301),
    .dout(grp_fu_2999_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U118(
    .din0(tmp_60_fu_1834_p4),
    .din1(grp_fu_3007_p1),
    .din2(acc_V_14_0_reg_1289),
    .dout(grp_fu_3007_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U119(
    .din0(tmp_61_fu_1848_p4),
    .din1(grp_fu_3015_p1),
    .din2(acc_V_15_0_reg_1277),
    .dout(grp_fu_3015_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U120(
    .din0(tmp_62_fu_1862_p4),
    .din1(grp_fu_3023_p1),
    .din2(acc_V_16_0_reg_1265),
    .dout(grp_fu_3023_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U121(
    .din0(tmp_63_fu_1876_p4),
    .din1(grp_fu_3031_p1),
    .din2(acc_V_17_0_reg_1253),
    .dout(grp_fu_3031_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U122(
    .din0(tmp_64_fu_1890_p4),
    .din1(grp_fu_3039_p1),
    .din2(acc_V_18_0_reg_1241),
    .dout(grp_fu_3039_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U123(
    .din0(tmp_65_fu_1904_p4),
    .din1(grp_fu_3047_p1),
    .din2(acc_V_19_0_reg_1229),
    .dout(grp_fu_3047_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U124(
    .din0(tmp_66_fu_1918_p4),
    .din1(grp_fu_3055_p1),
    .din2(acc_V_20_0_reg_1217),
    .dout(grp_fu_3055_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U125(
    .din0(tmp_67_fu_1932_p4),
    .din1(grp_fu_3063_p1),
    .din2(acc_V_21_0_reg_1205),
    .dout(grp_fu_3063_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U126(
    .din0(tmp_68_fu_1946_p4),
    .din1(grp_fu_3071_p1),
    .din2(acc_V_22_0_reg_1193),
    .dout(grp_fu_3071_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U127(
    .din0(tmp_69_fu_1960_p4),
    .din1(grp_fu_3079_p1),
    .din2(acc_V_23_0_reg_1181),
    .dout(grp_fu_3079_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U128(
    .din0(tmp_70_fu_1974_p4),
    .din1(grp_fu_3087_p1),
    .din2(acc_V_24_0_reg_1169),
    .dout(grp_fu_3087_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U129(
    .din0(tmp_71_fu_1988_p4),
    .din1(grp_fu_3095_p1),
    .din2(acc_V_25_0_reg_1157),
    .dout(grp_fu_3095_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U130(
    .din0(tmp_72_fu_2002_p4),
    .din1(grp_fu_3103_p1),
    .din2(acc_V_26_0_reg_1145),
    .dout(grp_fu_3103_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U131(
    .din0(tmp_73_fu_2016_p4),
    .din1(grp_fu_3111_p1),
    .din2(acc_V_27_0_reg_1133),
    .dout(grp_fu_3111_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U132(
    .din0(tmp_74_fu_2030_p4),
    .din1(grp_fu_3119_p1),
    .din2(acc_V_28_0_reg_1121),
    .dout(grp_fu_3119_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U133(
    .din0(tmp_75_fu_2044_p4),
    .din1(grp_fu_3127_p1),
    .din2(acc_V_29_0_reg_1109),
    .dout(grp_fu_3127_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U134(
    .din0(tmp_76_fu_2058_p4),
    .din1(grp_fu_3135_p1),
    .din2(acc_V_30_0_reg_1097),
    .dout(grp_fu_3135_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U135(
    .din0(tmp_77_fu_2072_p4),
    .din1(grp_fu_3143_p1),
    .din2(acc_V_31_0_reg_1085),
    .dout(grp_fu_3143_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U136(
    .din0(tmp_78_fu_2086_p4),
    .din1(grp_fu_3151_p1),
    .din2(acc_V_32_0_reg_1073),
    .dout(grp_fu_3151_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U137(
    .din0(tmp_79_fu_2100_p4),
    .din1(grp_fu_3159_p1),
    .din2(acc_V_33_0_reg_1061),
    .dout(grp_fu_3159_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U138(
    .din0(tmp_80_fu_2114_p4),
    .din1(grp_fu_3167_p1),
    .din2(acc_V_34_0_reg_1049),
    .dout(grp_fu_3167_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U139(
    .din0(tmp_81_fu_2128_p4),
    .din1(grp_fu_3175_p1),
    .din2(acc_V_35_0_reg_1037),
    .dout(grp_fu_3175_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U140(
    .din0(tmp_82_fu_2142_p4),
    .din1(grp_fu_3183_p1),
    .din2(acc_V_36_0_reg_1025),
    .dout(grp_fu_3183_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U141(
    .din0(tmp_83_fu_2156_p4),
    .din1(grp_fu_3191_p1),
    .din2(acc_V_37_0_reg_1013),
    .dout(grp_fu_3191_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U142(
    .din0(tmp_84_fu_2170_p4),
    .din1(grp_fu_3199_p1),
    .din2(acc_V_38_0_reg_1001),
    .dout(grp_fu_3199_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U143(
    .din0(tmp_85_fu_2184_p4),
    .din1(grp_fu_3207_p1),
    .din2(acc_V_39_0_reg_989),
    .dout(grp_fu_3207_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U144(
    .din0(tmp_86_fu_2198_p4),
    .din1(grp_fu_3215_p1),
    .din2(acc_V_40_0_reg_977),
    .dout(grp_fu_3215_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U145(
    .din0(tmp_87_fu_2212_p4),
    .din1(grp_fu_3223_p1),
    .din2(acc_V_41_0_reg_965),
    .dout(grp_fu_3223_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U146(
    .din0(tmp_88_fu_2226_p4),
    .din1(grp_fu_3231_p1),
    .din2(acc_V_42_0_reg_953),
    .dout(grp_fu_3231_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U147(
    .din0(tmp_89_fu_2240_p4),
    .din1(grp_fu_3239_p1),
    .din2(acc_V_43_0_reg_941),
    .dout(grp_fu_3239_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U148(
    .din0(tmp_90_fu_2254_p4),
    .din1(grp_fu_3247_p1),
    .din2(acc_V_44_0_reg_929),
    .dout(grp_fu_3247_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U149(
    .din0(tmp_91_fu_2268_p4),
    .din1(grp_fu_3255_p1),
    .din2(acc_V_45_0_reg_917),
    .dout(grp_fu_3255_p3)
);

myproject_mac_muladd_8s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_8s_16s_24ns_24_1_1_U150(
    .din0(tmp_92_fu_2282_p4),
    .din1(grp_fu_3263_p1),
    .din2(acc_V_46_0_reg_905),
    .dout(grp_fu_3263_p3)
);

myproject_mac_muladd_6s_16s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_6s_16s_24ns_24_1_1_U151(
    .din0(tmp_2_fu_2296_p4),
    .din1(layer_in_V_5_q0),
    .din2(acc_V_47_0_reg_893),
    .dout(grp_fu_3271_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg <= 1'b0;
    end else begin
        if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd1))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_0_0_reg_1457 <= grp_fu_2895_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1457 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_10_0_reg_1337 <= grp_fu_2975_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_1337 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_11_0_reg_1325 <= grp_fu_2983_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_1325 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_12_0_reg_1313 <= grp_fu_2991_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_1313 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_13_0_reg_1301 <= grp_fu_2999_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_1301 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_14_0_reg_1289 <= grp_fu_3007_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_1289 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_15_0_reg_1277 <= grp_fu_3015_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_1277 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_16_0_reg_1265 <= grp_fu_3023_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_1265 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_17_0_reg_1253 <= grp_fu_3031_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_1253 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_18_0_reg_1241 <= grp_fu_3039_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_1241 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_19_0_reg_1229 <= grp_fu_3047_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_1229 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_1_0_reg_1445 <= grp_fu_2903_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1445 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_20_0_reg_1217 <= grp_fu_3055_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_1217 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_21_0_reg_1205 <= grp_fu_3063_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_1205 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_22_0_reg_1193 <= grp_fu_3071_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_1193 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_23_0_reg_1181 <= grp_fu_3079_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_1181 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_24_0_reg_1169 <= grp_fu_3087_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_1169 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_25_0_reg_1157 <= grp_fu_3095_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_1157 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_26_0_reg_1145 <= grp_fu_3103_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_1145 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_27_0_reg_1133 <= grp_fu_3111_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_1133 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_28_0_reg_1121 <= grp_fu_3119_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_1121 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_29_0_reg_1109 <= grp_fu_3127_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_1109 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_2_0_reg_1433 <= grp_fu_2911_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1433 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_30_0_reg_1097 <= grp_fu_3135_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_1097 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_31_0_reg_1085 <= grp_fu_3143_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_1085 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_32_0_reg_1073 <= grp_fu_3151_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_32_0_reg_1073 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_33_0_reg_1061 <= grp_fu_3159_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_33_0_reg_1061 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_34_0_reg_1049 <= grp_fu_3167_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_34_0_reg_1049 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_35_0_reg_1037 <= grp_fu_3175_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_35_0_reg_1037 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_36_0_reg_1025 <= grp_fu_3183_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_36_0_reg_1025 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_37_0_reg_1013 <= grp_fu_3191_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_37_0_reg_1013 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_38_0_reg_1001 <= grp_fu_3199_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_38_0_reg_1001 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_39_0_reg_989 <= grp_fu_3207_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_39_0_reg_989 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_3_0_reg_1421 <= grp_fu_2919_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1421 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_40_0_reg_977 <= grp_fu_3215_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_40_0_reg_977 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_41_0_reg_965 <= grp_fu_3223_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_41_0_reg_965 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_42_0_reg_953 <= grp_fu_3231_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_42_0_reg_953 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_43_0_reg_941 <= grp_fu_3239_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_43_0_reg_941 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_44_0_reg_929 <= grp_fu_3247_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_44_0_reg_929 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_45_0_reg_917 <= grp_fu_3255_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_45_0_reg_917 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_46_0_reg_905 <= grp_fu_3263_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_46_0_reg_905 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_47_0_reg_893 <= grp_fu_3271_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_47_0_reg_893 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_4_0_reg_1409 <= grp_fu_2927_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1409 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_5_0_reg_1397 <= grp_fu_2935_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1397 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_6_0_reg_1385 <= grp_fu_2943_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1385 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_7_0_reg_1373 <= grp_fu_2951_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1373 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_8_0_reg_1361 <= grp_fu_2959_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1361 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_reg_3571 == 1'd0))) begin
        acc_V_9_0_reg_1349 <= grp_fu_2967_p3;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_1349 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        i1_0_i_reg_882 <= i1_fu_1529_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln313_fu_1511_p2 == 1'd0))) begin
        i1_0_i_reg_882 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_0_i_reg_871 <= i_reg_3522;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_871 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_ic_0_i_reg_1480 <= i_ic_reg_4063;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_ic_0_i_reg_1480 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_fu_1618_p2 == 1'd0))) begin
        in_index_reg_1469 <= ir_fu_1624_p2;
    end else if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1469 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_823)) begin
            pX <= 32'd0;
        end else if ((1'b1 == ap_condition_821)) begin
            pX <= add_ln359_fu_2814_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_743)) begin
            pY <= 32'd0;
        end else if ((1'b1 == ap_condition_606)) begin
            pY <= add_ln354_fu_2860_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_823)) begin
            sX <= 32'd0;
        end else if ((1'b1 == ap_condition_821)) begin
            sX <= select_ln361_fu_2830_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        if ((1'b1 == ap_condition_743)) begin
            storemerge_i_reg_1491 <= 32'd0;
        end else if ((1'b1 == ap_condition_606)) begin
            storemerge_i_reg_1491 <= select_ln356_fu_2876_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_2_reg_3567 <= and_ln326_2_fu_1612_p2;
        icmp_ln326_1_reg_3550 <= icmp_ln326_1_fu_1554_p2;
        icmp_ln326_reg_3540 <= icmp_ln326_fu_1544_p2;
        pX_load_reg_3561 <= pX;
        pY_load_reg_3555 <= pY;
        sX_load_reg_3535 <= sX;
        sY_load_reg_3545 <= sY;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_2_reg_3567) & (1'b1 == ap_CS_fsm_state31))) begin
        i_ic_reg_4063 <= i_ic_fu_2798_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_3522 <= i_fu_1517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_3571 <= icmp_ln324_fu_1618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln338_fu_2792_p2 == 1'd1) | (1'd0 == and_ln326_2_reg_3567)))) begin
        icmp_ln346_reg_4073 <= icmp_ln346_fu_2809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_4073 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        sY <= storemerge_i_reg_1491;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_10_reg_3875 <= {{acc_V_11_0_reg_1325[22:7]}};
        trunc_ln708_11_reg_3880 <= {{acc_V_12_0_reg_1313[22:7]}};
        trunc_ln708_12_reg_3885 <= {{acc_V_13_0_reg_1301[22:7]}};
        trunc_ln708_13_reg_3890 <= {{acc_V_14_0_reg_1289[22:7]}};
        trunc_ln708_14_reg_3895 <= {{acc_V_15_0_reg_1277[22:7]}};
        trunc_ln708_15_reg_3900 <= {{acc_V_16_0_reg_1265[22:7]}};
        trunc_ln708_16_reg_3905 <= {{acc_V_17_0_reg_1253[22:7]}};
        trunc_ln708_17_reg_3910 <= {{acc_V_18_0_reg_1241[22:7]}};
        trunc_ln708_18_reg_3915 <= {{acc_V_19_0_reg_1229[22:7]}};
        trunc_ln708_19_reg_3920 <= {{acc_V_20_0_reg_1217[22:7]}};
        trunc_ln708_20_reg_3925 <= {{acc_V_21_0_reg_1205[22:7]}};
        trunc_ln708_21_reg_3930 <= {{acc_V_22_0_reg_1193[22:7]}};
        trunc_ln708_22_reg_3935 <= {{acc_V_23_0_reg_1181[22:7]}};
        trunc_ln708_23_reg_3940 <= {{acc_V_24_0_reg_1169[22:7]}};
        trunc_ln708_24_reg_3945 <= {{acc_V_25_0_reg_1157[22:7]}};
        trunc_ln708_25_reg_3950 <= {{acc_V_26_0_reg_1145[22:7]}};
        trunc_ln708_26_reg_3955 <= {{acc_V_27_0_reg_1133[22:7]}};
        trunc_ln708_27_reg_3960 <= {{acc_V_28_0_reg_1121[22:7]}};
        trunc_ln708_28_reg_3965 <= {{acc_V_29_0_reg_1109[22:7]}};
        trunc_ln708_29_reg_3970 <= {{acc_V_30_0_reg_1097[22:7]}};
        trunc_ln708_2_reg_3830 <= {{acc_V_2_0_reg_1433[22:7]}};
        trunc_ln708_30_reg_3975 <= {{acc_V_31_0_reg_1085[22:7]}};
        trunc_ln708_31_reg_3980 <= {{acc_V_32_0_reg_1073[22:7]}};
        trunc_ln708_32_reg_3985 <= {{acc_V_33_0_reg_1061[22:7]}};
        trunc_ln708_33_reg_3990 <= {{acc_V_34_0_reg_1049[22:7]}};
        trunc_ln708_34_reg_3995 <= {{acc_V_35_0_reg_1037[22:7]}};
        trunc_ln708_35_reg_4000 <= {{acc_V_36_0_reg_1025[22:7]}};
        trunc_ln708_36_reg_4005 <= {{acc_V_37_0_reg_1013[22:7]}};
        trunc_ln708_37_reg_4010 <= {{acc_V_38_0_reg_1001[22:7]}};
        trunc_ln708_38_reg_4015 <= {{acc_V_39_0_reg_989[22:7]}};
        trunc_ln708_39_reg_4020 <= {{acc_V_40_0_reg_977[22:7]}};
        trunc_ln708_3_reg_3835 <= {{acc_V_3_0_reg_1421[22:7]}};
        trunc_ln708_40_reg_4025 <= {{acc_V_41_0_reg_965[22:7]}};
        trunc_ln708_41_reg_4030 <= {{acc_V_42_0_reg_953[22:7]}};
        trunc_ln708_42_reg_4035 <= {{acc_V_43_0_reg_941[22:7]}};
        trunc_ln708_43_reg_4040 <= {{acc_V_44_0_reg_929[22:7]}};
        trunc_ln708_44_reg_4045 <= {{acc_V_45_0_reg_917[22:7]}};
        trunc_ln708_45_reg_4050 <= {{acc_V_46_0_reg_905[22:7]}};
        trunc_ln708_46_reg_4055 <= {{acc_V_47_0_reg_893[22:7]}};
        trunc_ln708_4_reg_3840 <= {{acc_V_4_0_reg_1409[22:7]}};
        trunc_ln708_5_reg_3845 <= {{acc_V_5_0_reg_1397[22:7]}};
        trunc_ln708_6_reg_3850 <= {{acc_V_6_0_reg_1385[22:7]}};
        trunc_ln708_7_reg_3855 <= {{acc_V_7_0_reg_1373[22:7]}};
        trunc_ln708_8_reg_3860 <= {{acc_V_8_0_reg_1361[22:7]}};
        trunc_ln708_9_reg_3865 <= {{acc_V_9_0_reg_1349[22:7]}};
        trunc_ln708_s_reg_3870 <= {{acc_V_10_0_reg_1337[22:7]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1618_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_address0 = zext_ln332_fu_1630_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_address0;
    end else begin
        layer_in_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_ce0;
    end else begin
        layer_in_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_output_V_we0;
    end else begin
        layer_in_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_out_i_address0 = zext_ln340_fu_2804_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_address0 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_address0 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_address0 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_address0 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_address0 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_address0 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_address0 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_address1 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_address1 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_address1 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_address1 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_address1 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_address1 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_address1 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address1 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_d0 = trunc_ln708_45_reg_4050;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_d0 = trunc_ln708_43_reg_4040;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_d0 = trunc_ln708_41_reg_4030;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_d0 = trunc_ln708_39_reg_4020;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_d0 = trunc_ln708_37_reg_4010;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_d0 = trunc_ln708_35_reg_4000;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_d0 = trunc_ln708_33_reg_3990;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_d0 = trunc_ln708_31_reg_3980;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = trunc_ln708_29_reg_3970;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = trunc_ln708_27_reg_3960;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = trunc_ln708_25_reg_3950;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = trunc_ln708_23_reg_3940;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = trunc_ln708_21_reg_3930;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = trunc_ln708_19_reg_3920;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = trunc_ln708_17_reg_3910;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = trunc_ln708_15_reg_3900;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_13_reg_3890;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_11_reg_3880;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_s_reg_3870;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_8_reg_3860;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_6_reg_3850;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_4_reg_3840;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_2_reg_3830;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_1457[22:7]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_out_i_d1 = trunc_ln708_46_reg_4055;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_out_i_d1 = trunc_ln708_44_reg_4045;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_out_i_d1 = trunc_ln708_42_reg_4035;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_out_i_d1 = trunc_ln708_40_reg_4025;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_out_i_d1 = trunc_ln708_38_reg_4015;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_out_i_d1 = trunc_ln708_36_reg_4005;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_out_i_d1 = trunc_ln708_34_reg_3995;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_d1 = trunc_ln708_32_reg_3985;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = trunc_ln708_30_reg_3975;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = trunc_ln708_28_reg_3965;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = trunc_ln708_26_reg_3955;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = trunc_ln708_24_reg_3945;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = trunc_ln708_22_reg_3935;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = trunc_ln708_20_reg_3925;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = trunc_ln708_18_reg_3915;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = trunc_ln708_16_reg_3905;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_14_reg_3895;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_12_reg_3885;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_10_reg_3875;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_9_reg_3865;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_7_reg_3855;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_5_reg_3845;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_3_reg_3835;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_1445[22:7]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        tmpdata_V_address0 = zext_ln317_fu_1535_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w9_V_ce0 = 1'b1;
    end else begin
        w9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln315_fu_1523_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_2_fu_1612_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln326_2_fu_1612_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1618_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1618_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln338_fu_2792_p2 == 1'd1) | (1'd0 == and_ln326_2_reg_3567)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_2860_p2 = (pY_load_reg_3555 + 32'd1);

assign add_ln356_fu_2871_p2 = (sY_load_reg_3545 + 32'd1);

assign add_ln359_fu_2814_p2 = (pX_load_reg_3561 + 32'd1);

assign add_ln361_fu_2825_p2 = (sX_load_reg_3535 + 32'd1);

assign and_ln326_1_fu_1606_p2 = (icmp_ln326_3_fu_1594_p2 & icmp_ln326_2_fu_1574_p2);

assign and_ln326_2_fu_1612_p2 = (and_ln326_fu_1600_p2 & and_ln326_1_fu_1606_p2);

assign and_ln326_fu_1600_p2 = (icmp_ln326_fu_1544_p2 & icmp_ln326_1_fu_1554_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((data_V_V_empty_n == 1'b0) & (icmp_ln315_fu_1523_p2 == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_606 = (((icmp_ln346_fu_2809_p2 == 1'd1) & (icmp_ln350_fu_2855_p2 == 1'd0) & (1'd0 == and_ln326_2_reg_3567)) | ((icmp_ln346_fu_2809_p2 == 1'd1) & (icmp_ln338_fu_2792_p2 == 1'd1) & (icmp_ln350_fu_2855_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_743 = (((icmp_ln350_fu_2855_p2 == 1'd1) & (icmp_ln346_fu_2809_p2 == 1'd1) & (1'd0 == and_ln326_2_reg_3567)) | ((icmp_ln350_fu_2855_p2 == 1'd1) & (icmp_ln346_fu_2809_p2 == 1'd1) & (icmp_ln338_fu_2792_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_821 = (((icmp_ln346_fu_2809_p2 == 1'd0) & (1'd0 == and_ln326_2_reg_3567)) | ((icmp_ln338_fu_2792_p2 == 1'd1) & (icmp_ln346_fu_2809_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_823 = (((icmp_ln346_fu_2809_p2 == 1'd1) & (1'd0 == and_ln326_2_reg_3567)) | ((icmp_ln346_fu_2809_p2 == 1'd1) & (icmp_ln338_fu_2792_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config9_s_fu_1502_ap_start_reg;

assign grp_fu_2895_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2903_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2911_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2919_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2927_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2935_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2943_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2951_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2959_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2967_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2975_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2983_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2991_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_2999_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3007_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3015_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3023_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3031_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3039_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3047_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3055_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3063_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3071_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3079_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3087_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3095_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3103_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3111_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3119_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3127_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3135_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3143_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3151_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3159_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3167_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3175_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3183_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3191_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3199_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3207_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3215_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3223_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3231_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3239_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3247_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3255_p1 = sext_ln1116_fu_1640_p1;

assign grp_fu_3263_p1 = sext_ln1116_fu_1640_p1;

assign i1_fu_1529_p2 = (i1_0_i_reg_882 + 6'd1);

assign i_fu_1517_p2 = (i_0_i_reg_871 + 11'd1);

assign i_ic_fu_2798_p2 = (i_ic_0_i_reg_1480 + 6'd1);

assign icmp_ln313_fu_1511_p2 = ((i_0_i_reg_871 == 11'd1156) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1523_p2 = ((i1_0_i_reg_882 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1618_p2 = ((in_index_reg_1469 == 9'd288) ? 1'b1 : 1'b0);

assign icmp_ln326_1_fu_1554_p2 = ((sY == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_2_fu_1574_p2 = (($signed(tmp_3_fu_1564_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_3_fu_1594_p2 = (($signed(tmp_4_fu_1584_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1544_p2 = ((sX == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_2792_p2 = ((i_ic_0_i_reg_1480 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_2809_p2 = ((pX_load_reg_3561 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_2855_p2 = ((pY_load_reg_3555 == 32'd33) ? 1'b1 : 1'b0);

assign ir_fu_1624_p2 = (in_index_reg_1469 + 9'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_2876_p3 = ((icmp_ln326_1_reg_3550[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_2871_p2);

assign select_ln361_fu_2830_p3 = ((icmp_ln326_reg_3540[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_2825_p2);

assign sext_ln1116_fu_1640_p0 = layer_in_V_5_q0;

assign sext_ln1116_fu_1640_p1 = sext_ln1116_fu_1640_p0;

assign start_out = real_start;

assign tmp_2_fu_2296_p4 = {{w9_V_q0[381:376]}};

assign tmp_3_fu_1564_p4 = {{pY[31:1]}};

assign tmp_47_fu_1652_p4 = {{w9_V_q0[15:8]}};

assign tmp_48_fu_1666_p4 = {{w9_V_q0[23:16]}};

assign tmp_49_fu_1680_p4 = {{w9_V_q0[31:24]}};

assign tmp_4_fu_1584_p4 = {{pX[31:1]}};

assign tmp_50_fu_1694_p4 = {{w9_V_q0[39:32]}};

assign tmp_51_fu_1708_p4 = {{w9_V_q0[47:40]}};

assign tmp_52_fu_1722_p4 = {{w9_V_q0[55:48]}};

assign tmp_53_fu_1736_p4 = {{w9_V_q0[63:56]}};

assign tmp_54_fu_1750_p4 = {{w9_V_q0[71:64]}};

assign tmp_55_fu_1764_p4 = {{w9_V_q0[79:72]}};

assign tmp_56_fu_1778_p4 = {{w9_V_q0[87:80]}};

assign tmp_57_fu_1792_p4 = {{w9_V_q0[95:88]}};

assign tmp_58_fu_1806_p4 = {{w9_V_q0[103:96]}};

assign tmp_59_fu_1820_p4 = {{w9_V_q0[111:104]}};

assign tmp_60_fu_1834_p4 = {{w9_V_q0[119:112]}};

assign tmp_61_fu_1848_p4 = {{w9_V_q0[127:120]}};

assign tmp_62_fu_1862_p4 = {{w9_V_q0[135:128]}};

assign tmp_63_fu_1876_p4 = {{w9_V_q0[143:136]}};

assign tmp_64_fu_1890_p4 = {{w9_V_q0[151:144]}};

assign tmp_65_fu_1904_p4 = {{w9_V_q0[159:152]}};

assign tmp_66_fu_1918_p4 = {{w9_V_q0[167:160]}};

assign tmp_67_fu_1932_p4 = {{w9_V_q0[175:168]}};

assign tmp_68_fu_1946_p4 = {{w9_V_q0[183:176]}};

assign tmp_69_fu_1960_p4 = {{w9_V_q0[191:184]}};

assign tmp_70_fu_1974_p4 = {{w9_V_q0[199:192]}};

assign tmp_71_fu_1988_p4 = {{w9_V_q0[207:200]}};

assign tmp_72_fu_2002_p4 = {{w9_V_q0[215:208]}};

assign tmp_73_fu_2016_p4 = {{w9_V_q0[223:216]}};

assign tmp_74_fu_2030_p4 = {{w9_V_q0[231:224]}};

assign tmp_75_fu_2044_p4 = {{w9_V_q0[239:232]}};

assign tmp_76_fu_2058_p4 = {{w9_V_q0[247:240]}};

assign tmp_77_fu_2072_p4 = {{w9_V_q0[255:248]}};

assign tmp_78_fu_2086_p4 = {{w9_V_q0[263:256]}};

assign tmp_79_fu_2100_p4 = {{w9_V_q0[271:264]}};

assign tmp_80_fu_2114_p4 = {{w9_V_q0[279:272]}};

assign tmp_81_fu_2128_p4 = {{w9_V_q0[287:280]}};

assign tmp_82_fu_2142_p4 = {{w9_V_q0[295:288]}};

assign tmp_83_fu_2156_p4 = {{w9_V_q0[303:296]}};

assign tmp_84_fu_2170_p4 = {{w9_V_q0[311:304]}};

assign tmp_85_fu_2184_p4 = {{w9_V_q0[319:312]}};

assign tmp_86_fu_2198_p4 = {{w9_V_q0[327:320]}};

assign tmp_87_fu_2212_p4 = {{w9_V_q0[335:328]}};

assign tmp_88_fu_2226_p4 = {{w9_V_q0[343:336]}};

assign tmp_89_fu_2240_p4 = {{w9_V_q0[351:344]}};

assign tmp_90_fu_2254_p4 = {{w9_V_q0[359:352]}};

assign tmp_91_fu_2268_p4 = {{w9_V_q0[367:360]}};

assign tmp_92_fu_2282_p4 = {{w9_V_q0[375:368]}};

assign trunc_ln332_fu_1636_p1 = w9_V_q0[7:0];

assign w9_V_address0 = zext_ln332_fu_1630_p1;

assign zext_ln317_fu_1535_p1 = i1_0_i_reg_882;

assign zext_ln332_fu_1630_p1 = in_index_reg_1469;

assign zext_ln340_fu_2804_p1 = i_ic_0_i_reg_1480;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config9_s
